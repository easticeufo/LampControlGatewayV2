#
#   esp.conf -- ESP compiler rules
#   
#   Commands can be hard coded or they can used tokens of the form ${TOKEN}. The supported tokens are:
#       AR              - Library archiver command path
#       ARCH            - Target cpu architecture (arm, mips, ppc, x86)
#       ARLIB           - Archive library extension including period
#       CC              - Compiler command path
#       CFLAGS          - Extra compiler flags
#       DEBUG           - Compiler debug switches
#       GCC_ARCH        - Gcc architecture mtune|mcpu setting
#       INC             - Default include directory path
#       LIBPATH         - Library search path
#       LIBS            - Libraries to link with
#       LDFLAGS         - Extra linker flags
#       MOD             - Output module filename
#       OBJ             - Object filename corresponding to SRC
#       OS              - Target operating system (lower case)
#       PLATFORM        - Target platform system (os-arch)
#       SHOBJ           - Shared library extension including period
#       SHLIB           - Static library extension including period
#       SRC             - Input source file name
#       TMP             - Temporary file directory
#       VS              - Visual Studio install directory
#       WIND_BASE       - Wind River VxWorks base directory
#       WIND_GNU_PATH   - Wind River VxWorks GNU directory path
#       WIND_HOME       - Wind River VxWorks home directory
#       WIND_HOST_TYPE  - Wind River VxWorks host type
#       WIND_PLATFORM   - Wind River VxWorks platform
#       WINSDK          - Windows SDK install directory
#
#   The conditions in the <if Condition> directives can be either:
#       Operating systems: freebsd, linux, macosx, win, vxworks 
#       CPU architectures: arm, mips, ppc, sparc, x64, x86
#       Profiles: E.g. debug, release, ...
#       Platforms: E.g. vxworks-arm-debug, vxworks-pcc-release, linux-arm-debug

#
#   Check loading of espHandler
#
LoadModule espHandler libmod_esp

<if dynamic>
    
    #
    #   Default dynamic compilation command. Used for linux and freebsd. Overridden below for some operating systems.
    #
    EspCompile ${CC} -shared ${DEBUG} -Wall -Wno-unused-result -DPIC -fPIC -I. -I${APPINC} -I${INC} -L${LIBPATH} -Wl,--enable-new-dtags -Wl,-rpath,$ORIGIN/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${SRC}

    <if macosx>
        #
        #   Requires a separate compile and link to get debug symbols. If debug is not required, use the one-step compile command below. 
        #   Not sure if this is still true for clang.
        #
        EspCompile ${CC} -c ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${APPINC} -I${INC} ${SRC} -o ${OBJ}
        EspLink ${CC} -dynamiclib ${DEBUG} -arch ${GCC_ARCH} -L${LIBPATH} -Wl,-rpath,@executable_path/ -Wl,-rpath,@loader_path/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${OBJ} 
    </if>

    <if windows>
        EspEnv VisualStudio
        EspCompile "${CC}" -LD ${DEBUG} -D_REENTRANT -D_MT -nologo -GR- -W3 -MDd -I. -I${APPINC} -I"${INC}" -Fo"${MOD}.obj" -Fd"${MOD}.pdb" -Fe"${MOD}${SHOBJ}" "${SRC}" ${CFLAGS} ${LIBS} ${LDFLAGS} ws2_32.lib
    </if>

    <if vxworks>
        #
        #   The esp-vxworks.conf file will be generated by 'bit configure'
        #   Alternately, comment out this include, and set WIND_BASE, WIND_HOME, WIND_PLATFORM, WIND_HOST_TYPE, WIND_GNU_PATH and WIND_CCNAME in the environment.
        include ${BIN_DIR}/esp-vxworks.conf
        EspCompile "${WIND_GNU_PATH}/${WIND_HOST_TYPE}/bin/${WIND_CCNAME}" ${DEBUG} -DVXWORKS -DRW_MULTI_THREAD -D_REENTRANT -D_GNU_TOOL -DCPU=${VXCPU} -Wall -fno-builtin -fno-defer-pop -fvolatile "-I." "-I${APPINC}" "-I${WIND_BASE}/target/h" "-I${WIND_BASE}/target/h/wrn/coreip" -I${INC} ${CFLAGS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${SRC} 
    </if>

    <if cygwin>
        # This is unsupported. Cygwin is unreliable.
        EspCompile ${CC} -shared ${DEBUG} -Wall -Wno-unused-result -DPIC -fPIC -I. -I${APPINC} -I${INC} -L${LIBPATH} -Wl,-rpath,$ORIGIN/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${SRC}
    </if>

    <if SCRIPT>
        #
        #   Use this style to run a script to compile. The script would look like:
        #
        #   #!/bin/bash
        #   for i in "$@" ; do
        #       arg="${i%=*}"
        #       value="${i##*=}"
        #       eval $arg=\"$value\"
        #   done
        #   ${CC} -c ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${APPINC} -I${INC} ${SRC} 
        #   ${CC} -dynamiclib ${DEBUG} -L${LIBPATH} -Wl,-rpath,@executable_path/ -Wl,-rpath,@loader_path/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${MOD}${SHOBJ} ${OBJ} 
        #   rm -f ${OBJ}
        #   exit 0
        #
        #   This line will invoke the 'script' and define the args
        #
        # EspCompile script DEBUG="${DEBUG}" ARCH="${ARCH}" INC="${INC}" LIB="${LIBPATH}" OBJ="${OBJ}" MOD="${MOD}" SRC="${SRC}" SHOBJ="${SHOBJ}"
    </if>

<else>
    #
    #   Static compilation rules
    #

    #
    #   Default static compilation command
    #
    EspCompile ${CC} ${DEBUG} -Wall -Wno-unused-result -I. -I${APPINC} -I${INC} -L${LIBPATH} -Wl,--enable-new-dtags -Wl,-rpath,$ORIGIN/ ${CFLAGS} ${LIBS} ${LDFLAGS} -o ${OBJ} ${SRC}
    EspLink ${AR} -cr ${MOD}${ARLIB} ${OBJ} 

    <if macosx>
        EspCompile ${CC} -c ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${APPINC} -I${INC} -c ${SRC} -o ${OBJ}
        EspLink ${AR} -cr ${MOD}${ARLIB} ${OBJ} 
    </if>

    <if windows>
        EspEnv VisualStudio
        EspCompile "${CC}" -LD ${DEBUG} -D_REENTRANT -D_MT -nologo -GR- -W3 -MDd -I. -I${APPINC} -I"${INC}" -Fd"${MOD}.pdb" -Fe"${MOD}${SHOBJ}" "${SRC}"
        EspLink ${AR} -nologo cr ${MOD}${ARLIB} ${OBJ} 
    </if>

    <if vxworks>
        #
        #   The esp-vxworks.conf file will be generated by 'bit configure'
        #   Alternately, comment out this include, and set WIND_BASE, WIND_HOME, WIND_PLATFORM, WIND_HOST_TYPE, WIND_GNU_PATH 
        #   and WIND_CCNAME in the environment.
        include ${BIN_DIR}/esp-vxworks.conf
        EspCompile "${WIND_GNU_PATH}/${WIND_HOST_TYPE}/bin/${WIND_CCNAME}" ${DEBUG} -DVXWORKS -DRW_MULTI_THREAD -D_REENTRANT -D_GNU_TOOL -DCPU=${VXCPU} -Wall -fno-builtin -fno-defer-pop -fvolatile "-I." "-I${APPINC}" "-I${WIND_BASE}/target/h" "-I${WIND_BASE}/target/h/wrn/coreip" -I${INC} -o ${MOD}${SHOBJ} ${SRC} 
        EspLink "${WIND_GNU_PATH}/${WIND_HOST_TYPE}/bin/${WIND_ARNAME}" ${DEBUG} -cr ${MOD}${ARLIB} ${OBJ} 
    </if>
</if>
