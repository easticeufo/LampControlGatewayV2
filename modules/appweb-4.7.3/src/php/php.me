/*
    php.me - PHP MakeMe Component

    Use the "phplib" Pak to get the actual PHP source code.
 */

Me.load({
    targets: {
        php: {
            description: 'PHP Web Framework',
            configurable: true,
            config: function (target) {
                if (me.options.gen) {
                    return {
                        path: target.withpath || '/usr/src/php',
                        includes: [ 
                            '$(ME_COM_PHP_PATH)', 
                            '$(ME_COM_PHP_PATH)/main', 
                            '$(ME_COM_PHP_PATH)/Zend',
                            '$(ME_COM_PHP_PATH)/TSRM'],
                        libpaths: [ '$(ME_COM_PHP_PATH)/libs' ],
                        libraries: (me.platform.os == 'windows') ? ([ 'php5ts.lib' ]) : ([ 'php5' ]),
                    }
                }
                if (me.platform.os == 'windows') {
                    let search = getComponentSearch(target, 'phplib')
                    let path = probe('php5.spec.in', {search: search, nopath: true})
                    search = [
                        path.join('x64/Release_TS'),
                        path.join('x64/Release'),
                        path.join('Release_TS'),
                        path.join('Release'),
                        path.join('Debug_TS'),
                        path.join('Debug'),
                    ]
                    let reldir = probe('php.exe', {search: search}).absolute
                    let names = { Release_TS: 'php5ts.dll', Release: 'php5.dll', Debug_TS: 'php5ts_debug.dll', Debug: 'php5.dll' }
                    let lib = probe(names[reldir.basename], {fullpath: true, search: search}).absolute
                    let incdir = probe('main/php.h', {search: [path]}).absolute
                    return {
                        path:      path,
                        includes:  [ incdir, incdir.join('main'), incdir.join('Zend'), incdir.join('TSRM') ],
                        libraries: [ 'php5ts.lib' ],
                        linker:    [ '-libpath:' + lib.parent ],
                        imports:   lib.parent.files('php5ts.*')
                    }

                } else {
                    let search = getComponentSearch(target, 'phplib', 'libs')
                    let lib = probe('libphp5.' + me.ext.shobj, {fullpath: true, search: search}).absolute
                    let path = lib.dirname.parent
                    let incdir = probe('php.h', {search: [path.join('main'), '/usr/include']}).absolute.parent
                    return {
                        path:      path,
                        includes:  [ incdir, incdir.join('main'), incdir.join('Zend'), incdir.join('TSRM') ],
                        libraries: [ 'php5' ],
                        linker:    [ '-L' + lib.parent ],
                        imports:   lib.parent.files('libphp5*.' + me.ext.shobj + '*')
                    }
                }
            },
        },
    },
})
